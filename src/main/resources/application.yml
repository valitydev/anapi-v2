server:
  port: ${server.port}

management:
  server:
    port: ${management.port}
  endpoint:
    health:
      show-details: always
    metrics:
      access: unrestricted
    prometheus:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  prometheus:
    metrics:
      export:
        enabled: false

service:
  magista:
    url: http://localhost:8022/change_it
    networkTimeout: 5000
  analytics:
    url: http://localhost:8022/change_it
    networkTimeout: 5000
  dominant:
    url: http://localhost:8022/change_it
    networkTimeout: 5000
  orgManager:
    url: http://localhost:8022/change_it
    networkTimeout: 5000
  bouncer:
    url: http://localhost:8022/change_it
    networkTimeout: 10000
    context-fragment-id: anapi
    deployment-id: production
    auth-method: SessionToken
    realm: external
    rule-set-id: change_it
    auth:
      enabled: false
  reporter:
    url: http://localhost:8022/change_it
    networkTimeout: 10000
    reportUrlLifetimeSec: 60

spring:
  application:
    name: '@project.name@'
  output:
    ansi:
      enabled: always
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  security:
    oauth2:
      resourceserver:
        url: https://auth.domain
        jwt:
          realm: internal
          issuer-uri: >
            ${spring.security.oauth2.resourceserver.url}/auth/realms/
            ${spring.security.oauth2.resourceserver.jwt.realm}
info:
  version: '@project.version@'
  stage: dev

auth.enabled: true
